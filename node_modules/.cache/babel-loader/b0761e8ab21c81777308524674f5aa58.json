{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import'./index.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var city={nome:'S√£o Jos√© dos Campos',uf:'SP',temperatura:'30',umidade:'70',vento:'20',chuva:'0',descricao:'Ensolarado',icone:'01d'};function Hello(_ref){var data=_ref.data,id=_ref.id,hora=_ref.hora;return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"h1\",{id:\"header\",children:[\"Ol\\xE1 direto de \",city.nome,\", estranho! \\uD83D\\uDC4B\\uD83C\\uDFFC\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Meu nome \\xE9 Marcel Scognamiglio \\u2013 mas pode me chamar de Scog!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Dados sobre o dia (passandos via DOM): Agora em \",city.nome,\" fazem \",city.temperatura,\" graus. A umidade do ar \\xE9 \",city.umidade,\"% e a chance de chuva \\xE9 de \",city.chuva,\"%\"]}),\"Dados do acesso (passandos via props): \",data,\", \",id,\", \",hora,\".\"]});};ReactDOM.render(/*#__PURE__*/ /* Com o Babel, o JSX √© convertido para o JS. Veja abaixo a forma que o Babel faz isso.\n\nReact.createElement( \"div\", { className: \"container\" },\n  React.createElement( \"h1\",  null, \"Ol√°, estranho! üëãüèº\" ),\n  React.createElement( \"p\",  null, \"Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!\" ),\n),*/ /* Aqui estou passando via props o objeto data que foi criado acima.*/_jsx(Hello,{data:\"29/11/2021\",id:\"A0000001\",hora:\"15:46\"}),document.getElementById('root'));","map":{"version":3,"sources":["/Users/marcelxv/Documents/GitHub/react/my-app/src/index.js"],"names":["React","ReactDOM","city","nome","uf","temperatura","umidade","vento","chuva","descricao","icone","Hello","data","id","hora","render","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,C,wFAGA,GAAIC,CAAAA,IAAI,CAAG,CACTC,IAAI,CAAE,qBADG,CAETC,EAAE,CAAE,IAFK,CAGTC,WAAW,CAAE,IAHJ,CAITC,OAAO,CAAE,IAJA,CAKTC,KAAK,CAAE,IALE,CAMTC,KAAK,CAAE,GANE,CAOTC,SAAS,CAAE,YAPF,CAQTC,KAAK,CAAE,KARE,CAAX,CAWA,QAASC,CAAAA,KAAT,MAAiC,IAAjBC,CAAAA,IAAiB,MAAjBA,IAAiB,CAAXC,EAAW,MAAXA,EAAW,CAAPC,IAAO,MAAPA,IAAO,CAC/B,mBACE,aAAK,SAAS,CAAC,WAAf,wBACA,YAAI,EAAE,CAAC,QAAP,+BAA+BZ,IAAI,CAACC,IAApC,0CADA,cAEA,2FAFA,cAGA,wEAAoDD,IAAI,CAACC,IAAzD,WAAsED,IAAI,CAACG,WAA3E,iCAAkHH,IAAI,CAACI,OAAvH,kCAA2JJ,IAAI,CAACM,KAAhK,OAHA,2CAIwCI,IAJxC,MAIgDC,EAJhD,MAIsDC,IAJtD,OADF,CAQD,EAGDb,QAAQ,CAACc,MAAT,eACA;AACA;AACA;AACA;AACA;AACA,IANA,CAQA,sEACA,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,CACA,EAAE,CAAC,UADH,CAEA,IAAI,CAAC,OAFL,EATA,CAYEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAZF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nlet city = {\n  nome: 'S√£o Jos√© dos Campos',\n  uf: 'SP',\n  temperatura: '30',\n  umidade: '70',\n  vento: '20',\n  chuva: '0',\n  descricao: 'Ensolarado',\n  icone: '01d'\n}\n\nfunction Hello({data, id, hora}) {\n  return (\n    <div className=\"container\">\n    <h1 id=\"header\">Ol√° direto de {city.nome}, estranho! üëãüèº</h1>\n    <p>Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!</p>\n    <p>Dados sobre o dia (passandos via DOM): Agora em {city.nome} fazem {city.temperatura} graus. A umidade do ar √© {city.umidade}% e a chance de chuva √© de {city.chuva}%</p>\n    Dados do acesso (passandos via props): {data}, {id}, {hora}.\n    </div>\n  );\n};\n\n\nReactDOM.render(\n/* Com o Babel, o JSX √© convertido para o JS. Veja abaixo a forma que o Babel faz isso.\n\nReact.createElement( \"div\", { className: \"container\" },\n  React.createElement( \"h1\",  null, \"Ol√°, estranho! üëãüèº\" ),\n  React.createElement( \"p\",  null, \"Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!\" ),\n),*/\n\n/* Aqui estou passando via props o objeto data que foi criado acima.*/\n<Hello data=\"29/11/2021\"\nid=\"A0000001\"\nhora=\"15:46\"/>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}