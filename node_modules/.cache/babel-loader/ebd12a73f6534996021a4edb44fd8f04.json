{"ast":null,"code":"var _jsxFileName = \"/Users/marcelxv/Documents/GitHub/react/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Rapper({\n  nome\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: nome\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Rapper;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rappers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Rapper, {\n      nome: \"Jay-Z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rapper, {\n      nome: \"Kanye West\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rapper, {\n      nome: \"Tupac\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rapper, {\n      nome: \"Nas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n\n_c2 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n/* Com o Babel, o JSX √© convertido para o JS. Veja abaixo a forma que o Babel faz isso.\n\nReact.createElement( \"div\", { className: \"container\" },\n  React.createElement( \"h1\",  null, \"Ol√°, estranho! üëãüèº\" ),\n  React.createElement( \"p\",  null, \"Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!\" ),\n),*/\n\n/* Aqui estou passando via props o objeto data que foi criado acima.*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Rapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/marcelxv/Documents/GitHub/react/my-app/src/index.js"],"names":["React","ReactDOM","Rapper","nome","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAIA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAAwB;AACtB,sBAAO;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQD,M;;AAIT,SAASE,GAAT,GAAe;AACb,sBACA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAWD;;MAZQA,G;AAcTH,QAAQ,CAACI,MAAT,eACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n\nfunction Rapper({nome}) {\n  return <h2>{nome}</h2>;\n}\n\nfunction App() {\n  return (\n  <div>\n    <h1>Rappers</h1>\n      <Rapper nome=\"Jay-Z\" /> \n      <Rapper nome=\"Kanye West\" /> \n      <Rapper nome=\"Tupac\" /> \n      <Rapper nome=\"Nas\" /> \n\n\n  </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n\n/* Com o Babel, o JSX √© convertido para o JS. Veja abaixo a forma que o Babel faz isso.\n\nReact.createElement( \"div\", { className: \"container\" },\n  React.createElement( \"h1\",  null, \"Ol√°, estranho! üëãüèº\" ),\n  React.createElement( \"p\",  null, \"Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!\" ),\n),*/\n\n/* Aqui estou passando via props o objeto data que foi criado acima.*/\n"]},"metadata":{},"sourceType":"module"}