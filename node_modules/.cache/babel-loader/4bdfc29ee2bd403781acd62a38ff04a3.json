{"ast":null,"code":"var _jsxFileName = \"/Users/marcelxv/Documents/GitHub/react/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet city = {\n  nome: 'S√£o Jos√© dos Campos',\n  uf: 'SP',\n  temperatura: '30',\n  umidade: '70',\n  vento: '20',\n  chuva: '0',\n  descricao: 'Ensolarado'\n};\nReactDOM.render(\n/*#__PURE__*/\n\n/* Com o Babel, o JSX √© convertido para o JS. Veja abaixo a forma que o Babel faz isso.\n\nReact.createElement( \"div\", { className: \"container\" },\n  React.createElement( \"h1\",  null, \"Ol√°, estranho! üëãüèº\" ),\n  React.createElement( \"p\",  null, \"Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!\" ),\n),*/\n_jsxDEV(\"div\", {\n  className: \"container\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Ol\\xE1 direto de \", city.nome, \", estranho! \\uD83D\\uDC4B\\uD83C\\uDFFC\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Meu nome \\xE9 Marcel Scognamiglio \\u2013 mas pode me chamar de Scog!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n    children: [\"Agora em \", city.nome, \" fazem \", city.temperatura, \" graus. A umidade do ar \\xE9 \", city.umidade, \"% e a chance de chuva \\xE9 de \", city.chuva, \"%\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"sources":["/Users/marcelxv/Documents/GitHub/react/my-app/src/index.js"],"names":["React","ReactDOM","city","nome","uf","temperatura","umidade","vento","chuva","descricao","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAGA,IAAIC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,qBADG;AAETC,EAAAA,EAAE,EAAE,IAFK;AAGTC,EAAAA,WAAW,EAAE,IAHJ;AAITC,EAAAA,OAAO,EAAE,IAJA;AAKTC,EAAAA,KAAK,EAAE,IALE;AAMTC,EAAAA,KAAK,EAAE,GANE;AAOTC,EAAAA,SAAS,EAAE;AAPF,CAAX;AAWAR,QAAQ,CAACS,MAAT;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA,0BACE;AAAA,oCAAmBR,IAAI,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,4BAAcD,IAAI,CAACC,IAAnB,aAAgCD,IAAI,CAACG,WAArC,mCAA4EH,IAAI,CAACI,OAAjF,oCAAqHJ,IAAI,CAACM,KAA1H;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAeEG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAfF,E,CAiBA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nlet city = {\n  nome: 'S√£o Jos√© dos Campos',\n  uf: 'SP',\n  temperatura: '30',\n  umidade: '70',\n  vento: '20',\n  chuva: '0',\n  descricao: 'Ensolarado',\n  \n}\n\nReactDOM.render(\n/* Com o Babel, o JSX √© convertido para o JS. Veja abaixo a forma que o Babel faz isso.\n\nReact.createElement( \"div\", { className: \"container\" },\n  React.createElement( \"h1\",  null, \"Ol√°, estranho! üëãüèº\" ),\n  React.createElement( \"p\",  null, \"Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!\" ),\n),*/\n\n  <div className=\"container\">\n    <h1>Ol√° direto de {city.nome}, estranho! üëãüèº</h1>\n    <h3>Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!</h3>\n    <h6>Agora em {city.nome} fazem {city.temperatura} graus. A umidade do ar √© {city.umidade}% e a chance de chuva √© de {city.chuva}%</h6>\n\n  </div>,\n\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"]},"metadata":{},"sourceType":"module"}