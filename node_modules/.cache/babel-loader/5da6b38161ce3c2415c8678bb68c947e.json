{"ast":null,"code":"var _jsxFileName = \"/Users/marcelxv/Documents/GitHub/react/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet city = {\n  nome: 'S√£o Jos√© dos Campos',\n  uf: 'SP',\n  temperatura: '30',\n  umidade: '70',\n  vento: '20',\n  chuva: '0',\n  descricao: 'Ensolarado',\n  icone: '01d'\n};\n\nfunction Hello({\n  data,\n  id,\n  hora\n}) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"header\",\n      children: [\"Ol\\xE1 direto de \", city.nome, \", estranho! \\uD83D\\uDC4B\\uD83C\\uDFFC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Meu nome \\xE9 Marcel Scognamiglio \\u2013 mas pode me chamar de Scog!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [\"Agora em \", city.nome, \" fazem \", city.temperatura, \" graus. A umidade do ar \\xE9 \", city.umidade, \"% e a chance de chuva \\xE9 de \", city.chuva, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), props.data, \", \", props.id, \", \", props.hora, \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Hello;\n;\nReactDOM.render(\n/*#__PURE__*/\n\n/* Com o Babel, o JSX √© convertido para o JS. Veja abaixo a forma que o Babel faz isso.\n\nReact.createElement( \"div\", { className: \"container\" },\n  React.createElement( \"h1\",  null, \"Ol√°, estranho! üëãüèº\" ),\n  React.createElement( \"p\",  null, \"Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!\" ),\n),*/\n\n/* Aqui estou passando via props o objeto data que foi criado acima.*/\n_jsxDEV(Hello, {\n  data: \"29/11/2021\",\n  id: \"A0000001\",\n  hora: \"15:46\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 1\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Hello\");","map":{"version":3,"sources":["/Users/marcelxv/Documents/GitHub/react/my-app/src/index.js"],"names":["React","ReactDOM","city","nome","uf","temperatura","umidade","vento","chuva","descricao","icone","Hello","data","id","hora","console","log","props","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAGA,IAAIC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,qBADG;AAETC,EAAAA,EAAE,EAAE,IAFK;AAGTC,EAAAA,WAAW,EAAE,IAHJ;AAITC,EAAAA,OAAO,EAAE,IAJA;AAKTC,EAAAA,KAAK,EAAE,IALE;AAMTC,EAAAA,KAAK,EAAE,GANE;AAOTC,EAAAA,SAAS,EAAE,YAPF;AAQTC,EAAAA,KAAK,EAAE;AARE,CAAX;;AAWA,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,EAAR;AAAYC,EAAAA;AAAZ,CAAf,EAAkC;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,sBAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACA;AAAI,MAAA,EAAE,EAAC,QAAP;AAAA,sCAA+Bf,IAAI,CAACC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,8BAAcD,IAAI,CAACC,IAAnB,aAAgCD,IAAI,CAACG,WAArC,mCAA4EH,IAAI,CAACI,OAAjF,oCAAqHJ,IAAI,CAACM,KAA1H;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,EAICS,KAAK,CAACL,IAJP,QAIeK,KAAK,CAACJ,EAJrB,QAI2BI,KAAK,CAACH,IAJjC;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AASD;;KAXQH,K;AAWR;AAGDV,QAAQ,CAACiB,MAAT;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAC,KAAD;AAAO,EAAA,IAAI,EAAC,YAAZ;AACA,EAAA,EAAE,EAAC,UADH;AAEA,EAAA,IAAI,EAAC;AAFL;AAAA;AAAA;AAAA;AAAA,QATA,EAYEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAZF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nlet city = {\n  nome: 'S√£o Jos√© dos Campos',\n  uf: 'SP',\n  temperatura: '30',\n  umidade: '70',\n  vento: '20',\n  chuva: '0',\n  descricao: 'Ensolarado',\n  icone: '01d'\n}\n\nfunction Hello({ data, id, hora}) {\n  console.log(props);\n  return (\n\n    <div className=\"container\">\n    <h1 id=\"header\">Ol√° direto de {city.nome}, estranho! üëãüèº</h1>\n    <h3>Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!</h3>\n    <h6>Agora em {city.nome} fazem {city.temperatura} graus. A umidade do ar √© {city.umidade}% e a chance de chuva √© de {city.chuva}%</h6>\n    {props.data}, {props.id}, {props.hora}.\n    </div>\n  );\n};\n\n\nReactDOM.render(\n/* Com o Babel, o JSX √© convertido para o JS. Veja abaixo a forma que o Babel faz isso.\n\nReact.createElement( \"div\", { className: \"container\" },\n  React.createElement( \"h1\",  null, \"Ol√°, estranho! üëãüèº\" ),\n  React.createElement( \"p\",  null, \"Meu nome √© Marcel Scognamiglio ‚Äì mas pode me chamar de Scog!\" ),\n),*/\n\n/* Aqui estou passando via props o objeto data que foi criado acima.*/\n<Hello data=\"29/11/2021\"\nid=\"A0000001\"\nhora=\"15:46\"/>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}